<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.misrobot.workflow</groupId>
	<artifactId>misrobot-workflow</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>misrobot-workflow</name>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<activiti.version>5.22.0</activiti.version>
		<swagger.version>2.9.2</swagger.version>
		<swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
		<dockerfile-maven-version>1.4.7</dockerfile-maven-version>
	</properties>

	<!-- 引入spring boot的依赖 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
	</parent>
  
	<dependencyManagement>
		<dependencies>
			<!-- 
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.0.4.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			 -->
			 	
			<dependency>
		        <groupId>org.springframework.cloud</groupId>
		        <artifactId>spring-cloud-dependencies</artifactId>
		        <version>Finchley.RELEASE</version>
		        <type>pom</type>
		        <scope>import</scope>
	        </dependency>
	       
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-actuator</artifactId>
    	</dependency>
    	<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		     <groupId>org.springframework.boot</groupId>
		     <artifactId>spring-boot-starter-web-services</artifactId>          
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>26.0-jre</version>
		</dependency>

		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-spring-boot-starter-basic</artifactId>
			<version>${activiti.version}</version>
		</dependency>
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-spring-boot-starter-actuator</artifactId>
			<version>${activiti.version}</version>
		</dependency>
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-modeler</artifactId>
			<version>${activiti.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.1.10</version>
		</dependency>

		<!-- swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		
		<!-- 最新版本有问题 -->
		<dependency>
		    <groupId>io.github.swagger2markup</groupId>
		    <artifactId>swagger2markup</artifactId>
		    <version>1.3.1</version>
		</dependency>
		<!-- 
		<dependency>
            <groupId>io.github.swagger2markup</groupId>
            <artifactId>swagger2markup-spring-restdocs-ext</artifactId>
            <version>1.3.3</version>
            <scope>test</scope>
        </dependency>
		 -->
		<!-- fastjson依赖 -->
	   <!--  
	   <dependency>
	      	<groupId>com.alibaba</groupId>
	      	<artifactId>fastjson</artifactId>
	      	<version>1.2.49</version>
	    </dependency> 
	    -->
	    <dependency>
	    	<groupId>org.springframework.cloud</groupId>
    		<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
	    </dependency>
	</dependencies>

	<build>
		<finalName>misrobot-workflow</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-version}</version>
				<executions>
					<execution>
						<id>docker-build</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<repository>${project.build.finalName}</repository>
    						<tag>${project.version}</tag>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- 生成html文件，asciidoc由测试类生成 -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
        		<artifactId>asciidoctor-maven-plugin</artifactId>
        		<version>1.5.7</version>
        		<configuration>
        			<sourceDirectory>${project.build.directory}/asciidoc</sourceDirectory>
        			<sourceDocumentName>workflow.adoc</sourceDocumentName>
			        <headerFooter>true</headerFooter>
			        <doctype>book</doctype>
			        <sourceHighlighter>coderay</sourceHighlighter>
			        <attributes>
			            <toc>left</toc>
			            <toclevels>3</toclevels>
			            <sectnums>true</sectnums>
			            <revnumber>${project.version}</revnumber>
			            <revdate>${maven.build.timestamp}</revdate>
			        </attributes>
			    </configuration>
        		<executions>
        			<execution>
        				<id>output-html</id>
        				<phase>package</phase>
        				<goals>
        					<goal>process-asciidoc</goal>
        				</goals>
        				<configuration>
			                <backend>html5</backend>
			                <!-- <outputDirectory>${project.build.directory}</outputDirectory> -->
			            </configuration>
        			</execution>
        		</executions>
			</plugin>
			
		</plugins>
	</build>
</project>